@model AppDevProjectGroup27.Models.ViewModels.IncomeVM
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<br />
<div class="border backgroundWhiteBorder">
    <div class="row">
        <div class="col-12">
            <h2 class="text-info">Income Review: </h2>
            <h3>Date: <b>@Model.DisplayDate.ToString("MM/dd/yyyy")</b></h3>
        </div>
    </div>
    <div class="row">
        <div class="col-6" style="text-align:left">
            <h4>Income Made:  <b>@Model.IncomeMade.ToString("C")</b></h4>
        </div>
        <div class="col-6" style="text-align:right">
            <h4>Total Items Sold: <b>@Html.DisplayFor(x => x.ItemSoldDay)</b></h4>
        </div>
    </div>
    <br />
    @using (Html.BeginForm("Index", "Income", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="container border border-secondary" style="height:60px;">
            <div class="row container">
                <div class="col-10">
                    <div class="row" style="padding-top:10px">
                        <div class="col-4" style="vertical-align:middle">
                            <h5 style="vertical-align:middle">View Income of:</h5>
                        </div>
                        <div class="col-6">
                            <input type="text" id="datepicker" name="datepicker" value="" class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="col-1">
                    <div class="row" style="padding-top:10px;">
                        <button type="submit" name="submit" value="Filter" class="btn btn-info form-control">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>

        </div>
    }
    <br />
    <br />
    @if (Model.IncomeList.Count() > 0)
    {
        <figure class="highcharts-figure">
            <div id="container"></div>
        </figure>
    }
    else
    {
        <p>No Income For @Model.DisplayDate.ToString("MM/dd/yyyy")...</p>
    }
</div>


<style>
    #container {
        height: 400px;
    }

    .highcharts-figure, .highcharts-data-table table {
        min-width: 310px;
        max-width: 800px;
        margin: 1em auto;
    }

    .highcharts-data-table table {
        font-family: Trebuchet MS, sans-serif;
        border-collapse: collapse;
        border: 1px solid #EBEBEB;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: #555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }
</style>




@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-timepicker/1.13.18/jquery.timepicker.js">

    </script>

    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>

    <script type="text/javascript">
        $(function () {
            var Today = new Date('@Model.CurrentDate.ToString("MM/dd/yyyy")');
            var TDate = Today.getDate();
            var TMonth = Today.getMonth();
            var TYear = Today.getFullYear();

            var Early = new Date('@Model.EarliestDay.ToString("MM/dd/yyyy")');
            var EarlDate = Early.getDate();
            var EarlMonth = Early.getMonth();
            var EarlYear = Early.getFullYear();
            $("#datepicker").datepicker({ minDate: new Date(EarlYear, EarlMonth, EarlDate), maxDate: new Date(TYear, TMonth, TDate) });
        });
        $(document).ready(function () {
            $("#datepicker").attr("readonly", true);
        });
    </script>


    @if (Model.IncomeList.Count() > 0)
    {
        <script>

        $(document).ready(function () {
            var data = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.IncomeList) as String)
            $(function () {
                            var Names = []
                var Quan = []
                var Price = []
                for (var i = 0; i < data.length; i++)
                {
                    Names.push(data[i].ItemName);
                    Quan.push(data[i].ItemQuan);
                    Price.push(data[i].ItemPrice);
                }
                        Highcharts.chart('container', {
                chart: {
                    zoomType: 'xy'
                },
                title: {
                    text: ''
                }, exporting: { enabled: false },
                                                xAxis: [{

                                                            categories: Names,
                                                            crosshair: true,
                                                            labels: {
                                                                allowDecimals: false,
                                                                style: {
                                                                    fontSize: '14px',
                                                                    color: '#000000'
                                                                }
                                                            },
                                                            title: {
                                                                text: 'Menu Items',
                                                                style: {
                                                                    color: '#000000',
                                                                    fontSize : '18px'
                                                                }
                                                            }
                                                        }], plotOptions: {
                                                            column: {
                                                                events: {
                                                                    legendItemClick: function () {
                                                                        return false;
                                                                    }
                                                                }, states: {
                                                                    inactive: {
                                                                        opacity: 1
                                                                    }
                                                                }
                                                            }, spline: {
                                                                events: {
                                                                    legendItemClick: function () {
                                                                        return false;
                                                                    }
                                                                }, states: {
                                                                    inactive: {
                                                                        opacity: 1
                                                                    }
                                                                }
                                                            }
                                                        },
                        yAxis: [{ // Primary yAxis
                            labels: {
                                format: 'R{value}',
                                style: {
                                    color: '#0066ff',
                                    fontSize: '14px'
                                }
                            },
                            title: {
                                text: 'Price',
                                style: {
                                    color: '#0066ff',
                                    fontSize: '14px'
                                }
                            },
                            opposite: true

                        }, { // Secondary yAxis
                            allowDecimals: false,
                            gridLineWidth: 0,
                            title: {
                                text: 'Quantity',
                                style: {
                                    color: '#ff9933',
                                    fontSize: '15px'

                                }
                            },
                            labels: {
                                format: '{value}',
                                style: {
                                    color: '#ff9933',
                                    fontSize: '15px'
                                }
                            },

                        }],
                        tooltip: {
                            shared: true
                        },
                        series: [{
                            name: 'Quantity',
                            color: '#ff9933',
                            type: 'column',
                            yAxis: 1,
                            data: Quan,

                        }, {
                            name: 'Price',
                            type: 'spline',
                            color: '#0066ff',
                            data: Price,
                            tooltip: {
                                valuePrefix: 'R'
                            }
                                }],
                        exporting: {
                            buttons: {
                                contextButton: {
                                    symbol: null,
                                    menuItems: null,
                                    y: 300,
                                    text: 'Download As Picture',
                                    onclick: function () {
                                        this.exportChart({
                                            type: 'image/png'
                                        });
                                    }, theme: {
                                        fill: '#D3D3D3'
                                    }
                                }
                            }
                        },
                        responsive: {
                            rules: [{
                                condition: {
                                    maxWidth: 500
                                },
                                chartOptions: {
                                    yAxis: [{
                                        labels: {
                                            align: 'right',
                                            x: 0,
                                            y: -6
                                        },
                                        showLastLabel: true
                                    }, {
                                        labels: {
                                            align: 'left',
                                            x: 0,
                                            y: -6
                                        },
                                        showLastLabel: true
                                    }, {
                                        visible: false
                                    }]
                                }
                            }]
                                                        }, credits: {
                                                            enabled: false
                                                        },
                    });

                                });
                            });




        </script>
    }

}