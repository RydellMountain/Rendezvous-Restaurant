@model List<AppDevProjectGroup27.Models.ViewModels.OrderDetailsViewModel>
@using AppDevProjectGroup27.Utility

@{
    ViewData["Title"] = "ManageOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-info">Manage Orders</h2>

@using (Html.BeginForm("FilterBy", "Order", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="container border border-secondary" style="height:60px;">
        <div class="row container">
            <div class="col-9">
                <div class="row" style="padding-top:10px">
                    <div class="col-3" style="vertical-align:middle">
                        <h3>Filter By:</h3>
                    </div>
                    <div class="col-4" style="align-self:center">
                        <input type="text" id="datepicker" name="datepicker" value="" class="form-control" />
                    </div>
                </div>
            </div>
            <div class="col-1">
                <div class="row" style="padding-top:10px;">
                    <button type="submit" name="submit" value="Filter" class="btn btn-info form-control">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </div>

    </div>
}




<form method="post">
    <br />
    <div class="container row bg-white p-2 border mb-3 rounded">
        @if (Model.Count > 0)
        {

            @foreach (var item in Model)
            {
                <div class="col-12 pb-3 pt-3">
                    <div class="backgroundWhiteBorder10Padding">
                        <div class="row" id="OrderTable">
                            <div class="col-4">
                                Order Number : @item.OrderHeader.Id

                                <ul class="text-info">
                                    @foreach (var details in item.OrderDetails)
                                    {
                                        <li>@details.Name x @details.Count</li>
                                    }
                                </ul>
                            </div>
                            <div class="col-4 pb-2">
                                <div class="input-group pb-2">
                                    <div class="input-group-append">
                                        <span class="input-group-text">Time</span>
                                    </div>

                                    <input type="text" class="border rounded form-control" readonly value="@item.OrderHeader.PickUpTime" />
                                </div>
                                @{
                                    var comments = item.OrderHeader.Comments;
                                    if (comments == null || comments.Trim().Length == 0)
                                    {
                                        item.OrderHeader.Comments = "No Special Instructions";
                                    }
                                }

                                <textarea asp-for="@item.OrderHeader.Comments" readonly class="rounded border form-control" style="width:100%;height:75px;"></textarea>
                            </div>
                            <div class="col-3 offset-1 d-flex align-items-center">
                                @if (item.OrderHeader.Status.Equals(SD.StatusSubmitted))
                                {
                                    <div class="col-12">
                                            <button type="submit" asp-action="OrderPrepare" asp-route-OrderId="@item.OrderHeader.Id" class="btn btn-info form-control mb-3">
                                                <i class="fas fa-check"></i>&nbsp; Start Order
                                            </button>

                                        <button type="submit" asp-action="CancelOrder" asp-route-OrderId="@item.OrderHeader.Id" class="btn btn-danger form-control mb-3">
                                            <i class="fas fa-times"></i>&nbsp; Cancel Order
                                        </button>

                                    </div>
                                }
                                else
                                {

                                    @if (item.OrderHeader.Status.Equals(SD.StatusInProcess))
                                    {
                                        <div class="col-12">
                                            <button type="submit" asp-action="OrderReady" asp-route-OrderId="@item.OrderHeader.Id" class="btn btn-success form-control mb-3">
                                                <i class="fas fa-flag-checkered">&nbsp; Order Ready</i>
                                            </button>
                                            <button type="submit" asp-action="OrderCancel" asp-route-OrderId="@item.OrderHeader.Id" class="btn btn-danger form-control mb-3">
                                                <i class="fas fa-times">&nbsp; Cancel Order</i>
                                            </button>
                                        </div>
                                    }

                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
            <br />
        }
        else
        {
            <br />
            <p>No Orders to Manage...</p>
        }
    </div>
</form>

@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-timepicker/1.13.18/jquery.timepicker.js">
    </script>


    <script>
        $(document).ready(function () {
            $("#datepicker").attr("readonly", true);
        });
        function getTimeFromCurrentDate() {
            var curDt = new Date('@SharedMethods.GetDateTime().ToString("MM/dd/yyyy HH:mm:ss")');

            var minTime = "";
            if (curDt.getHours() < 11) {
                minTime = '12:00pm';
            }
            else {
                if (curDt.getMinutes < 30) {
                    minTime = (curDt.getHours() + 1).toString() + ':30pm'
                }
                else {
                    minTime = (curDt.getHours() + 2).toString() + ':00pm'
                }
            }
            return minTime;
        }
        $(function () {
            var cDt = new Date('@SharedMethods.GetDateTime().ToString("MM/dd/yyyy")');
            var minDt = cDt;
            if (getTimeFromCurrentDate >= 20) {
                minDt.setDate(cDt.getDate() + 1);
            }
            $("#datepicker").datepicker({ minDate: minDt, maxDate: "+1W" });
        });
    </script>

} 