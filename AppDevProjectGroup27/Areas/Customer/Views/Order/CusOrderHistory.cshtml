@model AppDevProjectGroup27.Models.ViewModels.CusOrderHistoryVM
@using AppDevProjectGroup27.Utility

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<partial name="_StatusMessage" model="Model.StatusMessage" />
<div>
    <div class="row">
        <div class="col-12">
            <h2 class="text-info">Customers' Order History</h2>
            <br />
            @if (Model.DisplayDate.HasValue)
            {<h3>Order Date: <b>@Model.DisplayDate.Value.ToString("MM/dd/yyyy")</b></h3>}
        else
        {
            <h3>Order Date: <b>-</b></h3>
        }
        </div>
        <div class="col-12">
            @if (!string.IsNullOrEmpty(Model.StatusChosen))
            {
                <h4>Status: <b>@Model.StatusChosen</b></h4>
            }
            else
            {
                <h4>Status: <b>-</b></h4>
            }
        </div>
        <div class="col-12">
            @if (!string.IsNullOrEmpty(Model.PaymentStatusChosen))
            {
                <h4>Payment Status: <b>@Model.PaymentStatusChosen</b></h4>
            }
            else
            {
                <h4>Payment Status: <b>-</b></h4>
            }
        </div>
    </div>
    <br />
    @using (Html.BeginForm("CusOrderHistory", "Order", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="container border border-secondary" style="height:60px; width:4000px;">
            <div class="row container">
                <div class="col-12">
                    <div class="row" style="padding-top:10px">
                        <div class="col-1">
                            <h6>Orders of:</h6>
                        </div>
                        <div class="col-2">
                            <input type="text" id="datepicker" name="datepicker" value="" class="form-control" />
                        </div>
                        <div class="col-1">
                            <h6 style="vertical-align:middle">Status:</h6>
                        </div>
                        <div class="col-2">
                            <select id="Status" name="Status" asp-items="Model.Status">
                                <option value="">Select Status</option>
                            </select>
                        </div>
                        <div class="col-2">
                            <h6 style="vertical-align:middle">Payment Status:</h6>
                        </div>
                        <div class="col-2">
                            <select id="PaymentStatus" name="PaymentStatus" asp-items="Model.PaymentStatus">
                                <option value="">Select Payment Status</option>
                            </select>
                        </div>
                        <div class="col-1"></div>
                        <div class="col-1">
                            <button type="submit" name="submit" value="Filter" class="btn btn-info form-control">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>

                    </div>

                </div>

            </div>

        </div>
    }
    <br />
    @if (Model.Orders.Count > 0)
    {
        <table class="table table-striped border">
            <tr class="table-secondary">
                <th>
                    @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.PickUpName)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.ApplicationUser.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.EstimatedTimeComplete)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.PickUpTime)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.StartDateTime)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.CompleteDateTime)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.PickedUpOrder)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.Duration)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.OrderTotal)
                </th>
                <th>
                    Total Items
                </th>
                <th>@Html.DisplayNameFor(m => m.Orders[0].OrderHeader.Status)</th>
                <th>Payment Status</th>
                <th>@Html.DisplayNameFor(m => m.Orders[0].OrderHeader.OrderStartedBy)</th>
                <th>@Html.DisplayNameFor(m => m.Orders[0].OrderHeader.OrderCompletedBy)</th>
                <th></th>
            </tr>
            @foreach (var item in Model.Orders)
            {
        <tr>
            <td>
                @Html.DisplayFor(m => item.OrderHeader.Id)
            </td>
            <td>
                @Html.DisplayFor(m => item.OrderHeader.PickUpName)
            </td>
            <td>
                @Html.DisplayFor(m => item.OrderHeader.ApplicationUser.Email)
            </td>
            <td>
                @Html.DisplayFor(m => item.OrderHeader.EstimatedTimeComplete)
            </td>
            <td>
                @Html.DisplayFor(m => item.OrderHeader.PickUpTime)
            </td>
            @if (item.OrderHeader.StartDateTime == null)
            {
                <td>
                    -
                </td>
            }
            else
            {
                <td>@Html.DisplayFor(m => item.OrderHeader.StartDateTime)</td>
            }
            @if (item.OrderHeader.CompleteDateTime == null)
            {
                <td>
                    -
                </td>
            }
            else
            {
                <td>@Html.DisplayFor(m => item.OrderHeader.CompleteDateTime)</td>
            }
            @if (item.OrderHeader.PickedUpOrder == null)
            {
                <td>
                    -
                </td>
            }
            else
            {
                <td>@Html.DisplayFor(m => item.OrderHeader.PickedUpOrder)</td>
            }
            @if (string.IsNullOrEmpty(item.OrderHeader.Duration))
            {
                <td>
                    -
                </td>
            }
            else
            {
                <td>@Html.DisplayFor(m => item.OrderHeader.Duration)</td>
            }
            <td>
                @Html.DisplayFor(m => item.OrderHeader.OrderTotal)
            </td>
            <td>
                @Html.DisplayFor(m => item.OrderDetails.Count)
            </td>
            <td>
                @Html.DisplayFor(m => item.OrderHeader.Status)
            </td>
            <td>
                @Html.DisplayFor(m => item.OrderHeader.PaymentStatus)
            </td>
            @if (string.IsNullOrEmpty(item.OrderHeader.OrderStartedBy))
            {
                <td>
                    -
                </td>
            }
            else
            {
                <td>@Html.DisplayFor(m => item.OrderHeader.OrderStartedBy)</td>
            }
            @if (string.IsNullOrEmpty(item.OrderHeader.OrderCompletedBy))
            {
                <td>
                    -
                </td>
            }
            else
            {
                <td>@Html.DisplayFor(m => item.OrderHeader.OrderCompletedBy)</td>
            }
            <td>
                <button type="submit" class="btn btn-success anchorDetail" data-id="@item.OrderHeader.Id" data-toggle="modal">
                    <i class="far fa-list-alt"></i>Details
                </button>
            </td>
        </tr>
            }
        </table>
    }
    else
    {
        <p>No Customer Orders...</p>
    }
</div>


<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog-centered modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-success text-light justify-content-center">
                <h5 class="modal-title">Order Details</h5>
            </div>
            <div class="modal-body justify-content-center" id="myModalContent">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" style="width:20%" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>






@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-timepicker/1.13.18/jquery.timepicker.js">
    </script>

    <script type="text/javascript">
        $(function () {
            var Today = new Date('@Model.CurrentDate.ToString("MM/dd/yyyy")');
            var TDate = Today.getDate();
            var TMonth = Today.getMonth();
            var TYear = Today.getFullYear();
            var Early = new Date('@Model.EarliestDate.ToString("MM/dd/yyyy")');
            var EarlDate = Early.getDate();
            var EarlMonth = Early.getMonth();
            var EarlYear = Early.getFullYear();
            $("#datepicker").datepicker({ minDate: new Date(EarlYear, EarlMonth, EarlDate), maxDate: new Date(TYear, TMonth, TDate) });
        });
        $(document).ready(function () {
            $("#datepicker").attr("readonly", true);
        });
    </script>

    <script>
        var PostBackURL = '/Customer/Order/GetCusOrderDetails';
        $(function () {
            $(".anchorDetail").click(function () {
                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');
                $.ajax({
                    type: "GET",
                    url: PostBackURL,
                    contentType: "application/json; charset=utf-8",
                    data: { "Id": id },
                    cache: false,
                    dataType: "html",
                    success: function (data) {
                        $('#myModalContent').html(data);
                        $('#myModal').modal('show');
                    },
                    error: function () {
                        alert("Dynamic content load failed");
                    }
                });
            });
        });
    </script>
}