@model AppDevProjectGroup27.Models.ViewModels.OrderListViewModel
@using AppDevProjectGroup27.Utility
@{
    ViewData["Title"] = "My Order History |";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<br />
<div>
    <div class="row">
        <div class="col-6">
            <h2 class="text-info">My Order History</h2>
        </div>
    </div>
    <br />
    <div>
        @if (Model.Orders.Count() > 0)
        {
            <table class="table table-striped border" style="text-align:left">
                <tr class="table-secondary">
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.PickUpName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.ApplicationUser.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.EstimatedTimeComplete)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.PickUpTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.StartDateTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.CompleteDateTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.PickedUpOrder)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.Duration)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.OrderTotal)
                    </th>
                    <th>
                        Total Items
                    </th>
                    <th></th>
                    <th></th>

                </tr>
                @foreach (var item in Model.Orders)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(m => item.OrderHeader.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.OrderHeader.PickUpName)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.OrderHeader.ApplicationUser.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.OrderHeader.EstimatedTimeComplete)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.OrderHeader.PickUpTime)
                        </td>
                        @if (item.OrderHeader.StartDateTime == null)
                        {
                            <td>
                                -
                            </td>
                        }
                        else
                        {
                            <td>@Html.DisplayFor(m => item.OrderHeader.StartDateTime)</td>
                        }
                        @if (item.OrderHeader.CompleteDateTime == null)
                        {
                            <td>
                                -
                            </td>
                        }
                        else
                        {
                            <td>@Html.DisplayFor(m => item.OrderHeader.CompleteDateTime)</td>
                        }
                        @if (item.OrderHeader.PickedUpOrder == null)
                        {
                            <td>
                                -
                            </td>
                        }
                        else
                        {
                            <td>@Html.DisplayFor(m => item.OrderHeader.PickedUpOrder)</td>
                        }
                        @if (string.IsNullOrEmpty(item.OrderHeader.Duration))
                        {
                            <td>
                                -
                            </td>
                        }
                        else
                        {
                            <td>@Html.DisplayFor(m => item.OrderHeader.Duration)</td>
                        }
                        <td>
                            @Html.DisplayFor(m => item.OrderHeader.OrderTotal)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.OrderDetails.Count)
                        </td>
                        <td>
                            <button type="submit" class="btn btn-success anchorDetail" data-id="@item.OrderHeader.Id" data-toggle="modal">
                                <i class="far fa-list-alt"></i>Details
                            </button>
                            @if (item.OrderHeader.Status == SD.StatusSubmitted || item.OrderHeader.Status == SD.StatusInProcess || item.OrderHeader.Status == SD.StatusCompleted || item.OrderHeader.Status == SD.StatusReady)

                            {
                                <button type="button" class="btn btn-info btnOrderStatus" data-id="@item.OrderHeader.Id" data-toggle="modal">
                                    <i class="far fa-clock"></i> Status
                                </button>
                            }



                        </td>
                        <td>
                            @if ((item.OrderHeader.Status == SD.StatusSubmitted || item.OrderHeader.Status == SD.StatusInProcess) && (item.OrderHeader.PaymentStatus == SD.PaymentStatusApproved || item.OrderHeader.PaymentStatus == SD.PaymentStatusPending) && User.IsInRole(SD.CustomerEndUser))
                            {
                                <form method="post">
                                    <button type="submit" asp-action="CusOrderCancel" asp-route-OrderId="@item.OrderHeader.Id" class="btn btn-danger">
                                        <i class="fas fa-times"></i>&nbsp; Cancel Order
                                    </button>
                                </form>
                            }
                            else if ((item.OrderHeader.Status == SD.StatusSubmitted || item.OrderHeader.Status == SD.StatusInProcess) && (item.OrderHeader.PaymentStatus == SD.PaymentStatusApproved || item.OrderHeader.PaymentStatus == SD.PaymentStatusPending) && (User.IsInRole(SD.ManagerUser) || User.IsInRole(SD.FrontDeskUser) || User.IsInRole(SD.KitchenUser)))
                            {
                                <form method="post">
                                    <button type="submit" asp-action="SpecCusOrderCancel" asp-route-OrderId="@item.OrderHeader.Id" class="btn btn-danger">
                                        <i class="fas fa-times"></i>&nbsp; Cancel Order
                                    </button>
                                </form>
                            }
                        </td>

                    </tr>
                }

            </table>
            <div page-model="@Model.PagingInfo"
                 page-classes-enabled="true"
                 page-class="btn border"
                 page-class-normal="btn btn-light"
                 page-class-selected="btn btn-info active"
                 class="btn-group float-right">

            </div>
            <br />
        }
        else
        {
            <p>No Orders Exist...</p>
        }
    </div>
</div>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog-centered modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-success text-light justify-content-center">
                <h5 class="modal-title">Order Details</h5>
            </div>

            <div class="modal-body justify-content-center" id="myModalContent">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" style="width:20%" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="myOrderStatus" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-info text-light justify-content-center">
                <h5 class="modal-title">Order Status </h5>
            </div>
            <div class="modal-body justify-content-center" id='myOrderStatusContent'>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" style="width:20%" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>



@section scripts
    {
    <script>
        var PostBackURL = '/Customer/Order/GetOrderDetails';
        var OrderStatusURL = '/Customer/Order/GetOrderStatus';
        $(function () {
            $(".anchorDetail").click(function () {
                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');
                $.ajax({
                    type: "GET",
                    url: PostBackURL,
                    contentType: "application/json; charset=utf-8",
                    data: { "Id": id },
                    cache: false,
                    dataType: "html",
                    success: function (data) {
                        $('#myModalContent').html(data);
                        $('#myModal').modal('show');
                    },
                    error: function () {
                        alert("Dynamic content load failed");
                    }
                });
            });
        });
        $(".btnOrderStatus").click(function () {
            var $buttonClicked = $(this);
            var id = $buttonClicked.attr('data-id');
            $.ajax({
                type: "GET",
                url: OrderStatusURL,
                contentType: "text/html; charset=utf-8",
                data: { "Id": id },
                cache: false,
                dataType: "html",
                success: function (data) {
                    $('#myOrderStatusContent').html(data);
                    $('#myOrderStatus').modal('show');
                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            });
        });

    </script>
}